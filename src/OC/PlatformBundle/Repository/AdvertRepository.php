<?php

namespace OC\PlatformBundle\Repository;

/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
*/

use Doctrine\ORM\Entity;
use Doctrine\ORM\QueryBuilder;
use Doctrine\ORM\Tools\Pagination\Paginator;


class AdvertRepository extends \Doctrine\ORM\EntityRepository
{
    public function myFindAll() {

        //Méthode 1: creation du querybuilder en passant par l'entity manager
        //$queryBuilder = $this->_em->createQueryBuilder()->select('a')->from('$this->_entityName', 'a');

        //Méthode 2:Création du querybuilder
        $queryBuilder = $this->createQueryBuilder('a');

        //On récupère la requête
        $query = $queryBuilder->getQuery();

        //On récupère les résultats de la requête
        $results = $query->getResult();

        //On retourne les résultats
        return $results;
    }

    public function myFindOne($id){
        $queryBuilder = $this->createQueryBuilder('a');

        $result = $queryBuilder->where('a.id = :id')->setParameter('id', $id)->getQuery()->getResult();

        return $result;
    }

    //On va créer une méthode qui va ramener les annonces créées par un auteur avant une année donnée
    public function myFindByAuthorAndDate($author, $year){
        $queryBuilder = $this->createQueryBuilder('a');

        $queryBuilder
        ->where('a.author = :author')
        ->setParameter('author', $year)
        ->andWhere('a.date < :date')
        ->setParameter('date', $year);
        
        
        return $queryBuilder->getQuery()->getResults();
    }

    //Maintenant c'est une méthode de condition que l'on va éffectuer. Cette condition s'effectuera sur des queryBuilder
    public function whereCurrentYear(QueryBuilder $qb){
        $qb->andWhere('a.date BETWEEN :start AND :end')
        ->setParameter(':start', new \Datetime(date('Y').'-01-01')) //La date de depart qui est le 1er janvier de l'année en cours
        ->setParameter(':end', new \Datetime(date('Y').'-12-31')); //Et la date de fin qui est le 31 decembre de l'année en cours
    }

    //Une méthode qui nous ramène les entités triées par date
    public function getAdverts($page, $nbPerPage){
        $query = $this->createQueryBuilder('a')
        // Jointure sur l'attribut image
        ->leftJoin('a.image', 'i')
        ->addSelect('i')
        // Jointure sur l'attribut categories
        ->leftJoin('a.categories', 'c')
        ->addSelect('c')
        ->orderBy('a.date', 'DESC')
        ->getQuery()
      ;
      $query
      //On définit l'annonce à partir de laquelle commencer la liste
      ->setFirstResult(($page-1)*$nbPerPage)
      //Ainsi que le nombre d'annonces à afficher sur la page
      ->setMaxResults($nbPerPage);

      //Enfin on retourne l'objet paginator qui correspond à la requête construite
      return new Paginator($query, true);

  


  }
}
